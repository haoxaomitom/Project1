/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package UI;

import Utils.XImage;

/**
 *
 * @author soaic
 */
public class CHCTJDialog extends javax.swing.JDialog {

    /**
     * Creates new form TTSPJDialog
     */
    public CHCTJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setIconImage(XImage.getAppIcon());
        setTitle("X Phone - Cấu hình chi tiết");
        table.getColumnModel().getColumn(1).setPreferredWidth(500);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cấu hình chi tiết IPhone 15 Pro Max");
        setPreferredSize(new java.awt.Dimension(850, 1050));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cấu hình chi tiết");

        table.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Công nghệ màn hình:", "OLED"},
                {"Độ phân giải:", "Super Retina XDR (1290 x 2796 Pixels)"},
                {"Màn hình rộng:", "6.7\" - Tần số quét 120 Hz"},
                {"Độ sáng tối đa:", "2000 nits"},
                {"Mặt kính cảm ứng:", " Kính cường lực Ceramic Shield"},
                {"Camera sau", ""},
                {"Độ phân giải:", "Chính 48 MP & Phụ 12 MP, 12 MP"},
                {"Quay phim:", "HD 720p@30fps"},
                {null, "FullHD 1080p@60fps"},
                {null, "FullHD 1080p@30fps"},
                {null, "4K 2160p@30fps"},
                {null, "4K 2160p@60fps"},
                {null, "8K 4320p@24fps"},
                {"Đèn Flash:", "Có"},
                {"Tính năng:", "Dolby Vision HDR"},
                {null, "Trôi nhanh thời gian (Time Lapse)"},
                {null, "Góc siêu rộng (Ultrawide)"},
                {null, "Zoom kỹ thuật số"},
                {null, "Góc rộng (Wide)"},
                {null, "Cinematic"},
                {null, "Quay chậm (Slow Motion)"},
                {null, "Xóa phông"},
                {null, "Deep Fusion"},
                {null, "Toàn cảnh (Panorama)"},
                {null, "Chống rung quang học (OIS)"},
                {null, "Ảnh Raw"},
                {null, "Ban đêm (Night Mode)"},
                {null, "Zoom quang học"},
                {null, "Siêu độ phân giải"},
                {null, "Live Photo"},
                {null, "Bộ lọc màu"},
                {null, "Smart HDR 5"},
                {"Camera trước  ", ""},
                {"Độ phân giải: ", " 12 MP"},
                {"Tính năng:", "Smart HDR 5"},
                {null, "Trôi nhanh thời gian (Time Lapse)"},
                {null, "Chụp đêm"},
                {null, "Quay video Full HD"},
                {null, "Quay video HD"},
                {null, "Nhãn dán (AR Stickers)"},
                {null, "Quay video 4K"},
                {null, "Xóa phông"},
                {null, "Live Photo"},
                {null, "Bộ lọc màu"},
                {"Hệ điều hành & CPU", " iOS 17"},
                {"Hệ điều hành:", ""},
                {"Chip xử lý (CPU):", "Apple A17 Pro 6 nhân"},
                {"Tốc độ CPU:", "Đang cập nhật"},
                {"Chip đồ họa (GPU):", "Đang cập nhật"},
                {"Bộ nhớ & Lưu trữ", null},
                {"RAM:", "8 GB"},
                {"Dung lượng lưu trữ:", "512 GB"},
                {"Danh bạ:", "Không giới hạn"},
                {"Kết nối", null},
                {"Mạng di động:", "Hỗ trợ 5G"},
                {"SIM:", "1 Nano SIM & 1 eSIM"},
                {"Wifi:", "Wi-Fi MIMO"},
                {null, "6 GHz"},
                {null, "Wi-Fi 802.11 a/b/g/n/ac/ax"},
                {"GPS:", "BEIDOU"},
                {null, "QZSS"},
                {null, "NavIC"},
                {null, "GPS"},
                {null, "GLONASS"},
                {null, "GALILEO"},
                {"Bluetooth:", " v5.3"},
                {"Cổng kết nối/sạc:", " Type-C"},
                {"Jack tai nghe:", " Type-C"},
                {"Pin & Sạc", null},
                {"Loại pin:", "Li-Ion"},
                {"Dung lượng pin:", "4422 mAh"},
                {"Hỗ trợ sạc tối đa:", "20 W"},
                {"Công nghệ pin:", "Tiết kiệm pin"},
                {null, "Sạc ngược không dây"},
                {null, "Sạc không dây MagSafe"},
                {"Tiện ích", ""},
                {"Bảo mật nâng cao:  ", " Mở khoá khuôn mặt Face ID"},
                {"Tính năng đặc biệt:", "Phát hiện va chạm (Crash Detection)Màn hình luôn hiển thị AOD"},
                {"Kháng nước, bụi:", "IP68"},
                {"Ghi âm:", " Ghi âm mặc định"},
                {"Xem phim:", "H.264(MPEG4-AVC)"},
                {"Nghe nhạc:", "MP3"},
                {null, "AAC"},
                {null, "FLAC"},
                {"Thông tin chung", null},
                {"Thiết kế:", "Nguyên khối"},
                {"Chất liệu:  ", " Khung Titan & Mặt lưng kính cường lực"},
                {"Kích thước, khối lượng:  ", "Dài 159.9 mm - Ngang 76.7 mm - Dày 8.25 mm - Nặng 221 g"},
                {"Thời điểm ra mắt:", "09/2023"}
            },
            new String [] {
                "Chức năng", "Chi tiết"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setAutoscrolls(false);
        table.setRowHeight(40);
        table.setSelectionBackground(new java.awt.Color(204, 204, 204));
        table.setShowGrid(true);
        table.setShowVerticalLines(false);
        table.setSurrendersFocusOnKeystroke(true);
        jScrollPane3.setViewportView(table);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 956, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1005, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CHCTJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CHCTJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CHCTJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CHCTJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CHCTJDialog dialog = new CHCTJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
